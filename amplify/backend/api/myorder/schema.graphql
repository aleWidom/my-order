input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
}

input CreateCategoryInput {
  id: Int!
  name: String!
  photo: String!
}

type Category {
  id: Int!
  name: String!
  photo: String!
}

input UpdateCategoryInput {
  id: Int!
  name: String
  photo: String
}

input CreateItemInput {
  id: Int!
  title: String!
  description: String!
  price: Float!
  photo: String!
  id_category: Int!
  id_restaurant: Int!
}

type Item {
  id: Int!
  title: String!
  description: String!
  price: Float!
  photo: String!
  id_category: Int!
  id_restaurant: Int!
}

input UpdateItemInput {
  id: Int!
  title: String
  description: String
  price: Float
  photo: String
  id_category: Int
  id_restaurant: Int
}

input CreateOrder_Input {
  id: Int!
  date: AWSTimestamp!
  id_table: Int!
}

type Order_ {
  id: Int!
  date: AWSTimestamp!
  id_table: Int!
}

input UpdateOrder_Input {
  id: Int!
  date: AWSTimestamp
  id_table: Int
}

input CreateRestaurantInput {
  id: Int!
  name: String!
  address: String!
  mail: String!
  phone: String!
  location: String!
}

type Restaurant {
  id: Int!
  name: String!
  address: String!
  mail: String!
  phone: String!
  location: String!
}

input UpdateRestaurantInput {
  id: Int!
  name: String
  address: String
  mail: String
  phone: String
  location: String
}

input CreateTable_Input {
  id: Int!
  table_number: String
  table_active: Int
  table_call: Int
  id_restaurant: Int!
}

type Table_ {
  id: Int!
  table_number: String
  table_active: Int
  table_call: Int
  id_restaurant: Int!
}

input UpdateTable_Input {
  id: Int!
  table_number: String
  table_active: Int
  table_call: Int
  id_restaurant: Int
}

type Mutation {
  deleteCategory(id: Int!): Category
  createCategory(createCategoryInput: CreateCategoryInput!): Category
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category
  deleteItem(id: Int!): Item
  createItem(createItemInput: CreateItemInput!): Item
  updateItem(updateItemInput: UpdateItemInput!): Item
  deleteOrder_(id: Int!): Order_
  createOrder_(createOrder_Input: CreateOrder_Input!): Order_
  updateOrder_(updateOrder_Input: UpdateOrder_Input!): Order_
  deleteRestaurant(id: Int!): Restaurant
  createRestaurant(createRestaurantInput: CreateRestaurantInput!): Restaurant
  updateRestaurant(updateRestaurantInput: UpdateRestaurantInput!): Restaurant
  deleteTable_(id: Int!): Table_
  createTable_(createTable_Input: CreateTable_Input!): Table_
  updateTable_(updateTable_Input: UpdateTable_Input!): Table_
}

type Query {
  getCategory(id: Int!): Category
  listCategorys: [Category]
  getItem(id: Int!): Item
  listItems: [Item]
  getOrder_(id: Int!): Order_
  listOrder_s: [Order_]
  getRestaurant(id: Int!): Restaurant
  listRestaurants: [Restaurant]
  getTable_(id: Int!): Table_
  listTable_s: [Table_]
}

type Subscription {
  onCreateCategory: Category @aws_subscribe(mutations: ["createCategory"])
  onCreateItem: Item @aws_subscribe(mutations: ["createItem"])
  onCreateOrder_: Order_ @aws_subscribe(mutations: ["createOrder_"])
  onCreateRestaurant: Restaurant @aws_subscribe(mutations: ["createRestaurant"])
  onCreateTable_: Table_ @aws_subscribe(mutations: ["createTable_"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
